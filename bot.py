# bot.py
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
import logging

API_TOKEN = "–¢–û–ö–ï–ù_–¢–í–û–ï–ì–û_–ë–û–¢–ê"
WEBAPP_URL = "https://gif1ka.github.io/casebotapp/webapp/"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –í –ø–∞–º—è—Ç–∏: user_id ‚Üí –∑–≤—ë–∑–¥—ã
user_stars = {}

@dp.message_handler(commands=["start"])
async def start(msg: types.Message):
    user_id = msg.from_user.id
    user_stars[user_id] = user_stars.get(user_id, 0) + 20
    await msg.answer("üëã –ü—Ä–∏–≤–µ—Ç! –£ —Ç–µ–±—è 20 ‚≠êÔ∏è. –ù–∞–ø–∏—à–∏ /wheel —á—Ç–æ–±—ã –∫—Ä—É—Ç–∏—Ç—å!")

@dp.message_handler(commands=["wheel"])
async def wheel(msg: types.Message):
    user_id = msg.from_user.id
    if user_stars.get(user_id, 0) < 15:
        await msg.answer("‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–≤—ë–∑–¥. –ù—É–∂–Ω–æ 15 ‚≠êÔ∏è")
        return
    user_stars[user_id] -= 15

    markup = InlineKeyboardMarkup().add(
        InlineKeyboardButton("üé∞ –ö—Ä—É—Ç–∏—Ç—å!", web_app=WebAppInfo(url=WEBAPP_URL))
    )
    await msg.answer("üéâ –ì–æ—Ç–æ–≤? –ñ–º–∏ –∫–Ω–æ–ø–∫—É!", reply_markup=markup)

@dp.message_handler(content_types=types.ContentType.WEB_APP_DATA)
async def handle_webapp_data(msg: types.Message):
    prize = msg.web_app_data.data
    await msg.answer(f"üéÅ –¢—ã –≤—ã–∏–≥—Ä–∞–ª: {prize}")

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    executor.start_polling(dp)
